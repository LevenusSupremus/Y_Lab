import itertools

points  = ['(0, 2)', '(2, 5)', '(5, 2)', '(6, 6)', '(8, 3)', '(0, 2)']
points1 = [(0, 2), (2, 5), (5, 2), (6, 6), (8, 3), (0, 2)]

data = [ # матрица для перебора через iterools
    (0,  3.605551275463989,  5.0,  7.211102550927978,  8.06225774829855,  0),
    (3.605551275463989 , 0,  4.242640687119285,  4.123105625617661,  6.324555320336759,  3.605551275463989),
    (5.0,  4.242640687119285,  0,  4.123105625617661,  3.1622776601683795,  5.0),
    (7.211102550927978,  4.123105625617661,  4.123105625617661,  0,  3.605551275463989,  7.211102550927978),
    (8.06225774829855,  6.324555320336759,  3.1622776601683795,  3.605551275463989,  0,  8.06225774829855),
    (0,  3.605551275463989,  5.0,  7.211102550927978,  8.06225774829855,  0)
]
# Расчёт расстояния между пунктами
def cp(fp, sp):
    return ((sp[0] - fp[0]) ** 2
            + (sp[1] - fp[1]) ** 2) ** 0.5

def path_length(p):
    s = 0
    for x, y in zip(p, p[1:]):
        if not data[x][y]: return 9999999999 #путь невозможен
        s += data[x][y]
    return s

temp  = 0
paths = list(itertools.permutations(range(len(data))))
m     = min(paths, key = path_length)
for i in range(len(m)-1):
	temp += cp(points1[i-1], points1[i])
	print(points[i]+f'{[temp] if temp != 0 else ""}', end = " -> ")
temp += cp(points1[-1], points1[i])
print(points[-1]+f'{[temp]}', ' = ', temp) 
